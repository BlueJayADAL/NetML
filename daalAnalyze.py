import sys
import os
import argparse

def main():
	parser = argparse.ArgumentParser(description="Run Joy to recursively convert the raw PCAP files into processed zipped files", add_help=True)
	parser.add_argument('-i', '--input', action="store", help="The input folder containing raw PCAP files")
	parser.add_argument('-o', '--output', action="store", help="The output folder containing files generated by Joy")
	args = parser.parse_args()
	

	#input = "/home/acanets/netml/iscxdownloads.cs.unb.ca/iscxdownloads/CICAndMal2017/PCAPs"
	#output = "/home/acanets/testJoy"
	#setup input folder and output folders
	if args.input == None or not os.path.isdir(args.input) or args.output == None or not os.path.isdir(args.output):
		print("No valid input or output folder!")
		return
	else:
		pcapFolder = args.input
		if not pcapFolder.endswith('/'):
			pcapFolder += '/'

		joyFolder = args.output
		if not joyFolder.endswith('/'):
			joyFolder += '/'
		dataFolder = joyFolder + 'data/'
		if not os.path.exists(dataFolder):
			os.mkdir(dataFolder)

	for dirpath, dirnames, filenames in os.walk(pcapFolder):
		if not dirnames:
			if not dirpath.endswith('/'):
				dirpath += '/'
			dirNames = dirpath.split('/')
			outName =  dirNames[-3] + '_' + dirNames[-2]
			fileCount = len(filenames)
			bound = 1
			count = (fileCount+(bound-1))/bound
			idx = 0
			while idx < count:
				fileToBeProcessed = [dirpath+x for x in filenames[idx*bound: min((idx+1)*bound, fileCount)]]
				fileToBeProcessedString = ' '.join(fileToBeProcessed)
				command = 'joy bidir=1 dns=1 tls=1 http=1 dist=1 ' + fileToBeProcessedString + ' > ' + dataFolder + outName + '_' + str(idx) + '.gz'
				print(command)
				os.system(command)
				idx += 1
	
	command1 = 'python ' + joyFolder + 'daalAnalyzeDNS.py -i ' + dataFolder + ' -j'
	print(command1) 
	os.system(command1)
	command2 = 'python ' + joyFolder + 'daalAnalyzeTLS.py -i ' + dataFolder + ' -j'
	print(command2) 
	os.system(command2)
	command3 = 'python ' + joyFolder + 'daalAnalyzeHTTPWithTime.py -i ' + dataFolder + ' -j'
	print (command3) 
	os.system(command3)
	command4 = 'python ' + joyFolder + 'daalAnalyzeMETA.py -i ' + dataFolder + ' -j'
	print (command4) 
	os.system(command4)


if __name__ == "__main__":
	main()
